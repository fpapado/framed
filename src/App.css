main > * + * {
  margin-top: 1rem;
}

h1 {
  margin-top: 0;
  text-align: center;
}

input[type="color"] {
  min-width: 88px;
  min-height: 44px;
  background-color: var(--color-bg);
  border: 1px solid var(--color-divider);
  border-radius: 2px;
}

.FilePicker,
.ShareButton,
.DownloadButton {
  display: block;
  border: 1px solid var(--color-divider);
  border-radius: 2px;
  background-color: var(--color-bg);
  color: var(--color-fg);
  min-width: 44px;
  min-height: 44px;
  font-weight: 600;
  width: 100%;
}

.CanvasArea {
  margin-top: 1rem;
  grid-area: preview;
}

.Controls {
  grid-area: controls;
}

.PreviewCanvas {
  display: block;
  max-width: 100%;
  width: 100%;
  border: 1px solid var(--color-divider);
}

.DownloadButton {
  margin-top: 1rem;
}

.CanvasWrapper {
  position: relative;
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

.CanvasWrapper .LoadingIndicator {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translateX(-50%) translateY(-50%);
  animation-name: fadeIn;
  animation-duration: 400ms;
  animation-delay: 400ms;
  animation-fill-mode: both;
  color: #111;
  background: #ffffffaa;
  padding: 1rem;
  border-radius: 8px;
}

.CanvasWrapper .ErrorIndicator {
  padding: 1rem;
  max-width: 18rem;
  width: 100%;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translateX(-50%) translateY(-50%);
  animation-name: fadeIn;
  animation-duration: 400ms;
  animation-delay: 400ms;
  animation-fill-mode: both;
  color: rgb(251, 166, 166);
  background: #111;
  border-radius: 8px;
  line-height: 1.4;
}

legend {
  font-weight: 600;
}

.RadioGroup {
  display: flex;
  margin-top: 0.5rem;
  gap: 1rem;
}

.Radio {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  justify-content: center;
  align-items: center;
  min-width: 88px;
  min-height: 44px;
  border: 1px solid var(--color-divider);
  padding: 0.5rem;
  border-radius: 2px;
  background-color: var(--color-bg);
  color: var(--color-fg);
}

.Radio input[type="radio"] {
  min-width: 44px;
  min-height: 44px;
}

@media screen and (min-width: 64rem) {
  /* Reset canvas area top margin from narrow screen view */
  .CanvasArea {
    margin-top: 0;
  }

  .WorkArea {
    display: grid;
    grid-template-areas: "preview controls";
    grid-template-columns: 28rem minmax(max-content, 16rem);
    justify-content: center;
    gap: 2rem;
  }
}

.DarkModeSetting {
  --dm-border-radius: 8px;
  display: flex;
  max-width: fit-content;
  margin-left: auto;
  margin-right: auto;
  padding: 0.25rem;
  flex-direction: row;
  justify-content: center;
  gap: 0.5rem;
  border: 2px solid var(--color-divider);
  border-radius: var(--dm-border-radius);
}

.DarkModeSetting button {
  /* Needed for absolute positioning of animated background */
  position: relative;
  display: block;
  padding: 0.5rem;
  /* Prompt buttons to have similar or same widths (8ch is ~the width of the word 'System') */
  min-width: max(44px, 8ch);
  min-height: 44px;
  border: none;
  border-radius: var(--dm-border-radius);
  background-color: var(--color-bg);
  font-weight: 600;
  color: var(--color-darkmode-fg);
  background-color: var(--color-darkmode-bg);
}

.DarkModeSetting .background {
  position: absolute;
  bottom: 0px;
  left: 0;
  right: 0;
  height: 100%;
  width: 100%;
  background: var(--color-darkmode-accent);
  border-radius: var(--dm-border-radius);
  /* Needed to not be obscured by other buttons when moving from last to first */
  z-index: 1;
}

.DarkModeSetting .label {
  position: relative;
  /* Needed to not be obscured by background */
  z-index: 2;
}
